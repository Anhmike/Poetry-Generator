#!/usr/bin/env python

import subprocess
import commands
import cgi
import os
import re
import random
import string
import cgitb; cgitb.enable()

# def checkfsmsyntax(fsm):
#     if fsm.strip()=='':
#         return ''
#     lines = map(lambda line: line.strip(),
#                 fsm.split('\n'))
#     #first line should be a single symbol with no (, ), ", *
#     spchar = re.compile('\(|\)|\"|\*')
#     if len(lines[0].split())!=1 or spchar.match(lines[0]):
#         return "First line should be a single symbol with no special chars"
#     #other lines should be of form ((state state "sym")) or ((state state "sym" "sym")), where "sym" could be *e*
#     arc = re.compile('\([^\(\)\*\"]+ \([^\(\)\*\"]+ (\".*\"|\*e\*)\)\)|\([^\(\)\*\"]+ \([^\(\)\*\"]+ (\".*\"|\*e\*) (".*"|\*e\*)( [\-\+e\d\.]+)?\)\)')
#     for li, line in enumerate(lines[1:]):
#         if line.strip()=='':
#             continue
#         if not arc.match(line):
#             return "Line "+str(li+1)+" has incorrect syntax"
#     return True


print "Content-type: text/html"
print 
print "<html><head>"
print "<title>Poetry and Sentence Generator"
print "</title>"
print "<link rel=\"stylesheet\" type=\"text/css\" href=\"http://www.cs.dartmouth.edu/~sravana/classes/classes.css\">"
print "<style>"
print ".ttlarge{font-family: Courier; font-size: 12pt;}"
print ".box{height: 550px; float: left; border: 1px solid #cdcdcd; padding: 10px;}"
print "</style>"
print "</head><body style=\"padding: 20px;\">"

print "<h1>Poetry and Sentence Generator</h1>"
print "This is a final project by Kaya Thomas and Ridwan Hassen. You can have random poetic sentence or a full poem generated by the program.<p>"

form = cgi.FieldStorage()
#numr = form.getvalue("numr")
#func = form.getvalue("func")

#print "<input type=\"radio\" name=\"func\" value=\"rangen\">Generate <input type=\"text\" name=\"numr\" size=\"3\"> random strings from the FSA<p>"
#print "<input type=\"submit\" value=\"Generate\"></form><p>"

fsm = ""
o = open("/net/tahoe3/kthomas/cs73/alphaonly.fsa", 'r')
for line in o:
    fsm += line

o.close()

fname1 = "alphaonly.fsa"
fname2 = 'rhyming.fsa'

print "<h2>Random Sentence Generator</h2>"
# fsmsyntax = checkfsmsyntax(cgi.escape(fsm))
# if fsmsyntax!=True:
#     print fsmsyntax
# else:
# if numr != None:
carmeloutput = commands.getoutput('/net/people/sravana/programs/carmel '+fname1)

carmeloutput = commands.getoutput('/net/people/sravana/programs/carmel -IWE -G '+'5'+' '+fname1).split('\n')
for li, line in enumerate(carmeloutput[3:]):
    print '<span class=\"ttlarge\">', line.replace('"', '')+'</span><br>'

print "<h2>Random Poem Generator</h2>"

# carmeloutput2 = commands.getoutput('/net/people/sravana/programs/carmel -IWE -G '+'1'+' '+fname2)
# poemList = carmeloutput2.split(" ")
# poem = ""
# for word in poemList:
#     newWord = word.replace('"','')
#     if len(newWord.split(" ")) > 1:
#          sWord = newWord.split(" ")
#          poem += sWord[0] + "\n"
#     else:
#         poem += newWord

carmeloutput = commands.getoutput('/net/people/sravana/programs/carmel '+fname2)

carmeloutput = commands.getoutput('/net/people/sravana/programs/carmel -IWE -G '+'1'+' '+fname2).split('/n')

i = 10
for li, line in enumerate(carmeloutput[3:]):
    print '<span class=\"ttlarge\">', line.replace('"', '')+'</span><br>'
    i -= 1
    if i == 0:
    	break




print "<div style=\"clear: both;\"></div>"
print "</body></html>"